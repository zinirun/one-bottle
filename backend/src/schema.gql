# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Bottle means a group of members(users)"""
type Bottle {
  """Bottle's UUID"""
  id: ID!

  """Bottle's name"""
  name: String!

  """master of group"""
  master: User!
  createdAt: Date!
  updatedAt: Date!
}

"""Date custom scalar type"""
scalar Date

"""Thread means one message in Bottle"""
type Thread {
  """Thread's UUID"""
  id: ID!

  """is Thread closed"""
  isClosed: Boolean!

  """Thread's type"""
  type: String!

  """Thread's result (JSON)"""
  result: String!

  """author of Thread"""
  author: User!
  createdAt: Date!
  updatedAt: Date!
}

"""User of overall service from OAuth"""
type User {
  """User's ID (PK)"""
  id: Float!

  """OAuth2 Provider"""
  provider: String!

  """OAuth2 Provider's id"""
  providerId: String!

  """User's Email Address"""
  email: String!

  """User's name from OAuth, can be 'Anonymous'"""
  username: String!

  """S3 URL of User's profile image"""
  profileImage: String!
  createdAt: Date!
  updatedAt: Date!
}

type Query {
  getUser: User!
  getBottle(id: String!): Bottle!
  getThread(id: String!): Thread!
}

type Mutation {
  createBottle(bottle: BottleCreateInput!): Bottle!
}

input BottleCreateInput {
  name: String!
}
